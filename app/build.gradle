apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        applicationId "com.happy.auction"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 2
        versionName "1.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
            // 还可以添加 'x86','x86_64', 'mips', 'mips64', 'arm64-v8a'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "0847fa596ddd675fd679aef3",
                JPUSH_CHANNEL: "developer-default",
        ]
    }

    //导入dataBinding支持
    dataBinding {
        enabled true
    }

    signingConfigs {
        release {
            storeFile file("../auction.jks")
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            buildConfigField "String", "HOST", '"192.168.1.250:80/v1"'
            buildConfigField "String", "HOST_RELEASE", '"hpjp.sherwin.top/v1"'
            minifyEnabled false
            signingConfig signingConfigs.release
        }

        release {
            buildConfigField "String", "HOST", '"hpjp.sherwin.top/v1"'
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "Auction" + "_V" + defaultConfig.versionName + "_" + buildType.name + ".apk"
        }
    }
}

def BUILD_VERSION = "26.1.0"

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    // Android
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:cardview-v7:$BUILD_VERSION"
    implementation "com.android.support:support-v4:$BUILD_VERSION"
    implementation "com.android.support:appcompat-v7:$BUILD_VERSION"
    implementation "com.android.support:support-v13:$BUILD_VERSION"
    implementation "com.android.support:design:$BUILD_VERSION"
    // Third package
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    implementation 'com.google.code.gson:gson:2.8.1'
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'com.github.lovetuzitong:MultiImageSelector:1.2'
    implementation 'com.qiniu:qiniu-android-sdk:7.3.+'
    implementation 'cn.aigestudio.wheelpicker:WheelPicker:1.1.2'
    implementation 'com.umeng.analytics:analytics:latest.integration'
    // RxJava2
    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
    implementation('io.reactivex.rxjava2:rxandroid:2.0.1') {
        exclude module: 'rxjava'
    }
    // RxLifecycle2
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.1.0'
    // If you want pre-written Activities and Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.0.1'
    // RxBinding
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    //LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    // JPush
    implementation 'cn.jiguang.sdk:jpush:3.0.9'
    implementation 'cn.jiguang.sdk:jcore:1.1.7'
    implementation project(':libs:share')
    implementation project(':libs:channel')
}
